{\rtf1\ansi\ansicpg936\cocoartf1343\cocoasubrtf160
{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red184\green14\blue61;
\red247\green238\blue241;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl600\sa200

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Given an index 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 k
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 , return the 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 k
\i0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 th
\fs28 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  row of the Pascal's triangle.\
For example, given 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 k
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  = 3,\cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \uc0\u8232 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Return 
\f1\fs26 \cf4 \cb5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 [1,3,3,1]
\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .\
\pard\pardeftab720\sl600\sa200

\b \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Note:
\b0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \uc0\u8232 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Could you optimize your algorithm to use only 
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 O
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 (
\i \expnd0\expndtw0\kerning0
\outl0\strokewidth0 k
\i0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ) extra space?\
}